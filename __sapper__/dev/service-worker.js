/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/service-worker.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./__sapper__/service-worker.js":
/*!**************************************!*\
  !*** ./__sapper__/service-worker.js ***!
  \**************************************/
/*! exports provided: timestamp, files, assets, shell, routes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"timestamp\", function() { return timestamp; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"files\", function() { return files; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"assets\", function() { return files; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"shell\", function() { return shell; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"routes\", function() { return routes; });\n// This file is generated by Sapper â€” do not edit it!\nconst timestamp = 1544983424872;\n\nconst files = [\n\t\"ace-logo-192.png\",\n\t\"ace-logo-512.png\",\n\t\"favicon.png\",\n\t\"global.css\",\n\t\"manifest.json\"\n];\n // legacy\n\nconst shell = [\n\t\"client/0283a0fd0939bbb49a77/0.0.js\",\n\t\"client/0283a0fd0939bbb49a77/index.index.js\",\n\t\"client/0283a0fd0939bbb49a77/main.js\"\n];\n\nconst routes = [\n\t{ pattern: /^\\/?$/ }\n];\n\n//# sourceURL=webpack:///./__sapper__/service-worker.js?");

/***/ }),

/***/ "./src/service-worker.js":
/*!*******************************!*\
  !*** ./src/service-worker.js ***!
  \*******************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _sapper_service_worker_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../__sapper__/service-worker.js */ \"./__sapper__/service-worker.js\");\n\r\n\r\nconst ASSETS = `cache${_sapper_service_worker_js__WEBPACK_IMPORTED_MODULE_0__[\"timestamp\"]}`;\r\n\r\n// `shell` is an array of all the files generated by webpack,\r\n// `files` is an array of everything in the `static` directory\r\nconst to_cache = _sapper_service_worker_js__WEBPACK_IMPORTED_MODULE_0__[\"shell\"].concat(_sapper_service_worker_js__WEBPACK_IMPORTED_MODULE_0__[\"files\"]);\r\nconst cached = new Set(to_cache);\r\n\r\nself.addEventListener('install', event => {\r\n\tevent.waitUntil(\r\n\t\tcaches\r\n\t\t\t.open(ASSETS)\r\n\t\t\t.then(cache => cache.addAll(to_cache))\r\n\t\t\t.then(() => {\r\n\t\t\t\tself.skipWaiting();\r\n\t\t\t})\r\n\t);\r\n});\r\n\r\nself.addEventListener('activate', event => {\r\n\tevent.waitUntil(\r\n\t\tcaches.keys().then(async keys => {\r\n\t\t\t// delete old caches\r\n\t\t\tfor (const key of keys) {\r\n\t\t\t\tif (key !== ASSETS) await caches.delete(key);\r\n\t\t\t}\r\n\r\n\t\t\tself.clients.claim();\r\n\t\t})\r\n\t);\r\n});\r\n\r\nself.addEventListener('fetch', event => {\r\n\tif (event.request.method !== 'GET' || event.request.headers.has('range')) return;\r\n\r\n\tconst url = new URL(event.request.url);\r\n\r\n\t// don't try to handle e.g. data: URIs\r\n\tif (!url.protocol.startsWith('http')) return;\r\n\r\n\t// ignore dev server requests\r\n\tif (url.hostname === self.location.hostname && url.port !== self.location.port) return;\r\n\r\n\t// always serve assets and webpack-generated files from cache\r\n\tif (url.host === self.location.host && cached.has(url.pathname)) {\r\n\t\tevent.respondWith(caches.match(event.request));\r\n\t\treturn;\r\n\t}\r\n\r\n\t// for pages, you might want to serve a shell `index.html` file,\r\n\t// which Sapper has generated for you. It's not right for every\r\n\t// app, but if it's right for yours then uncomment this section\r\n\t/*\r\n\tif (url.origin === self.origin && routes.find(route => route.pattern.test(url.pathname))) {\r\n\t\tevent.respondWith(caches.match('/index.html'));\r\n\t\treturn;\r\n\t}\r\n\t*/\r\n\r\n\tif (event.request.cache === 'only-if-cached') return;\r\n\r\n\t// for everything else, try the network first, falling back to\r\n\t// cache if the user is offline. (If the pages never change, you\r\n\t// might prefer a cache-first approach to a network-first one.)\r\n\tevent.respondWith(\r\n\t\tcaches\r\n\t\t\t.open(`offline${_sapper_service_worker_js__WEBPACK_IMPORTED_MODULE_0__[\"timestamp\"]}`)\r\n\t\t\t.then(async cache => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst response = await fetch(event.request);\r\n\t\t\t\t\tcache.put(event.request, response.clone());\r\n\t\t\t\t\treturn response;\r\n\t\t\t\t} catch(err) {\r\n\t\t\t\t\tconst response = await cache.match(event.request);\r\n\t\t\t\t\tif (response) return response;\r\n\r\n\t\t\t\t\tthrow err;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t);\r\n});\r\n\n\n//# sourceURL=webpack:///./src/service-worker.js?");

/***/ })

/******/ });